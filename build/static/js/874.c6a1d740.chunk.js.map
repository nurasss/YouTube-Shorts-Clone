{"version":3,"file":"static/js/874.c6a1d740.chunk.js","mappings":"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","sources":["components/Video.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Video.css\";\r\n\r\nfunction Video({\r\n  url,\r\n  channel,\r\n  description,\r\n  likes,\r\n  messages,\r\n  shares,\r\n  isAd,\r\n  adLink,\r\n  poster,\r\n}) {\r\n  const videoRef = useRef(null);\r\n  const [isMuted, setIsMuted] = useState(true);\r\n  const [showMutedMessage, setShowMutedMessage] = useState(false);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Автовоспроизведение, пауза по вхождению в экран\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        const isVisible = entry.isIntersecting;\r\n        setIsActive(isVisible);\r\n      },\r\n      { threshold: 0.8 }\r\n    );\r\n\r\n    const el = videoRef.current;\r\n    if (el) observer.observe(el);\r\n\r\n    return () => {\r\n      if (el) observer.unobserve(el);\r\n    };\r\n  }, []);\r\n\r\n  // Воспроизведение и остановка при активности\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n\r\n    if (isActive) {\r\n      video.play().catch((e) => console.warn(\"play error\", e));\r\n    } else {\r\n      video.pause();\r\n      video.currentTime = 0;\r\n    }\r\n  }, [isActive]);\r\n\r\n  const handleClick = (e) => {\r\n    if (\r\n      e.target.closest(\".video__sidebar\") ||\r\n      e.target.closest(\".video__footer\")\r\n    )\r\n      return;\r\n\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n\r\n    const nextMuted = !video.muted;\r\n    video.muted = nextMuted;\r\n    setIsMuted(nextMuted);\r\n\r\n    if (nextMuted) {\r\n      setShowMutedMessage(true);\r\n      setTimeout(() => setShowMutedMessage(false), 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video\" onClick={handleClick}>\r\n      {isLoading && <div className=\"video__loading\">Загрузка...</div>}\r\n\r\n      <video\r\n        ref={videoRef}\r\n        className=\"video__player\"\r\n        src={url}\r\n        poster={poster}\r\n        playsInline\r\n        loop\r\n        muted\r\n        preload=\"auto\"\r\n        onCanPlay={() => setIsLoading(false)}\r\n        onWaiting={() => setIsLoading(true)}\r\n      />\r\n\r\n      <div className=\"video__sidebar\">\r\n        <div className=\"video__button\">\r\n          <span className=\"material-symbols-outlined\" style={{ fontSize: \"36px\" }}>thumb_up</span>\r\n          <span>{likes}</span>\r\n        </div>\r\n        <div className=\"video__button\">\r\n          <span className=\"material-symbols-outlined\" style={{ fontSize: \"36px\" }}>thumb_down</span>\r\n        </div>\r\n        <div className=\"video__button\">\r\n          <span className=\"material-symbols-outlined\" style={{ fontSize: \"36px\" }}>comment</span>\r\n        </div>\r\n        <div className=\"video__button\">\r\n          <span className=\"material-symbols-outlined\" style={{ fontSize: \"36px\" }}>share</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"video__footer\">\r\n        {!isAd ? (\r\n          <>\r\n            <div className=\"video__channel\">\r\n              <strong>@{channel}</strong>\r\n              <button>Abonnieren</button>\r\n            </div>\r\n            <div className=\"video__description\">{description}</div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"video__description\">{description}</div>\r\n            <a\r\n              href=\"https://google.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"video__register-button centered\"\r\n            >\r\n              Jetzt registrieren\r\n            </a>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {showMutedMessage && <div className=\"video__loading\">🔇 Ton ist aus</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;\r\n"],"names":["_ref","url","channel","description","likes","messages","shares","isAd","adLink","poster","videoRef","useRef","isMuted","setIsMuted","useState","showMutedMessage","setShowMutedMessage","isActive","setIsActive","isLoading","setIsLoading","useEffect","observer","IntersectionObserver","_ref2","entry","isVisible","isIntersecting","threshold","el","current","observe","unobserve","video","play","catch","e","console","warn","pause","currentTime","_jsxs","className","onClick","target","closest","nextMuted","muted","setTimeout","children","_jsx","ref","src","playsInline","loop","preload","onCanPlay","onWaiting","style","fontSize","_Fragment","href","rel"],"sourceRoot":""}