{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bulat\\\\Desktop\\\\\\u044B\\u0440\\u0449\\u043A\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoSrc\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const [muted, setMuted] = useState(true);\n  const handleIntersection = entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        videoRef.current.play();\n      } else {\n        videoRef.current.pause();\n      }\n    });\n  };\n  useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.6\n    });\n    if (videoRef.current) {\n      observer.observe(videoRef.current);\n    }\n    return () => {\n      if (videoRef.current) {\n        observer.unobserve(videoRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    src: videoSrc,\n    muted: muted,\n    loop: true,\n    playsInline: true,\n    onClick: () => setMuted(!muted)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"mMPSvLhizB9Gtko0TMS92JeLZ3U=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","VideoPlayer","videoSrc","_s","videoRef","muted","setMuted","handleIntersection","entries","forEach","entry","isIntersecting","current","play","pause","observer","IntersectionObserver","threshold","observe","unobserve","ref","src","loop","playsInline","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bulat/Desktop/ырщк/src/VideoPlayer.js"],"sourcesContent":["\nimport React, { useRef, useEffect, useState } from 'react';\n\nfunction VideoPlayer({ videoSrc }) {\n  const videoRef = useRef(null);\n  const [muted, setMuted] = useState(true);\n\n  const handleIntersection = (entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        videoRef.current.play();\n      } else {\n        videoRef.current.pause();\n      }\n    });\n  };\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.6,\n    });\n\n    if (videoRef.current) {\n      observer.observe(videoRef.current);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        observer.unobserve(videoRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <video\n      ref={videoRef}\n      src={videoSrc}\n      muted={muted}\n      loop\n      playsInline\n      onClick={() => setMuted(!muted)}\n    />\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,kBAAkB,GAAIC,OAAO,IAAK;IACtCA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;MACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBP,QAAQ,CAACQ,OAAO,CAACC,IAAI,CAAC,CAAC;MACzB,CAAC,MAAM;QACLT,QAAQ,CAACQ,OAAO,CAACE,KAAK,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,IAAIC,oBAAoB,CAACT,kBAAkB,EAAE;MAC5DU,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAIb,QAAQ,CAACQ,OAAO,EAAE;MACpBG,QAAQ,CAACG,OAAO,CAACd,QAAQ,CAACQ,OAAO,CAAC;IACpC;IAEA,OAAO,MAAM;MACX,IAAIR,QAAQ,CAACQ,OAAO,EAAE;QACpBG,QAAQ,CAACI,SAAS,CAACf,QAAQ,CAACQ,OAAO,CAAC;MACtC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IACEoB,GAAG,EAAEhB,QAAS;IACdiB,GAAG,EAAEnB,QAAS;IACdG,KAAK,EAAEA,KAAM;IACbiB,IAAI;IACJC,WAAW;IACXC,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC,CAACD,KAAK;EAAE;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEN;AAACzB,EAAA,CAxCQF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}